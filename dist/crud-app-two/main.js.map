{"version":3,"sources":["./src/environments/environment.ts","./src/app/customer/customer.component.ts","./src/app/customer/customer.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/customer-list/customer-list.component.ts","./src/app/customer-list/customer-list.component.html","./src/app/shared/customer.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig : {\n    apiKey: \"AIzaSyCgcYcw2Wtc3Dc7Z4woAFmXwQOb2Gsp2kU\",\n    authDomain: \"crud-angular-84da7.firebaseapp.com\",\n    databaseURL: \"https://ng-complete-guide-b06af.firebaseio.com/\",\n    projectId: \"crud-angular-84da7\",\n    storageBucket: \"crud-angular-84da7.appspot.com\",\n    messagingSenderId: \"423904783572\",\n    appId: \"1:423904783572:web:4d51171d69fd2b78cedf41\",\n    measurementId: \"G-RHJPNH0MPL\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\nimport {CustomerService} from '../shared/customer.service';\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.css']\n})\nexport class CustomerComponent implements OnInit {\n\n  submitted: boolean;\n  showSuccessMessage: boolean;\n  \n  constructor(private customerService: CustomerService) { }\n  \n  ngOnInit(): void {\n  }\n\n  get f(){\n    return this.customerService.form;\n  }\n  \n  onSubmit(){\n    this.submitted = true;\n    if(this.customerService.form.valid){\n      if(this.customerService.form.get('$key').value === null){\n        this.customerService.insertCustomer(this.customerService.form.value);\n        this.showSuccessMessage = true;\n        setTimeout(()=> this.showSuccessMessage = false,3000);\n      }else{\n        this.customerService.updateCustomer(this.customerService.form.value);\n      }\n      this.submitted = false;\n      this.customerService.form.reset();\n    }\n    // console.log(this.customerService.form);\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-5\">\n        <form [formGroup]=\"f\" (ngSubmit)=\"onSubmit()\">\n            <input type=\"hidden\" formControlName=\"$key\">\n            <div class=\"form-group\">\n                <label>Nome Completo:</label>\n                <input type=\"text\" formControlName=\"fullName\" class=\"form-control\" placeholder=\"Insira Seu Nome Completo\" [ngClass]=\"{'is-invalid': submitted && f.get('fullName').errors}\">\n                <div class=\"invalid-feedback\" *ngIf=\"submitted && f.get('fullName').errors\" >\n                    Insira um nome válido!\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label>Email:</label>\n                <input type=\"email\" formControlName=\"email\" class=\"form-control\" placeholder=\"ex: teste@teste.com\" [ngClass]=\"{'is-invalid': submitted && f.get('email').errors}\">\n                <div class=\"invalid-feedback\" *ngIf=\"submitted && f.get('email').errors\">\n                    <div *ngIf=\"f.get('email').errors.required\">\n                        Por favor insira um e-mail\n                    </div>\n                    <div *ngIf=\"f.get('email').errors.email\">\n                        Email precisa ter @ !\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"phone\">Celular:</label>\n                <input type=\"tel\" formControlName=\"mobile\" class=\"form-control\" placeholder=\"(xx) xxxxx-xxxx\" \n                [ngClass]=\"{'is-invalid':submitted && f.get('mobile').errors}\">\n                <div *ngIf=\"submitted && f.get('mobile').errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.get('mobile').errors.required\">\n                        Por favor insira um número de celular!\n                    </div>\n                    <div *ngIf=\"f.get('mobile').errors.minlength\">\n                        O Celular precisa ter pelo menos 8 dígitos\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label>CPF:</label>\n                <input type=\"number\" formControlName=\"cpf\" class=\"form-control\" placeholder=\"Insira seu cpf (apenas números)\">\n            </div>\n            <div class=\"form-group\">\n                <label>Data de Nascimento:</label>\n                <input type=\"date\" formControlName=\"birthdate\" class=\"form-control\" placeholder=\"xx/xx/xxxx\">\n            </div>\n            <div class=\"form-group\">\n                <input type=\"submit\" value=\"Enviar\" class=\"btn btn-info\">\n            </div>\n        </form>\n        <div class=\"alert alert-info\" *ngIf=\"showSuccessMessage\">Enviado com Sucesso.</div>\n    </div>\n    <div class=\"col-md-7\">\n        <app-customer-list></app-customer-list>\n    </div>\n</div>\n","import { Component } from '@angular/core';\n\nimport {CustomerService} from './shared/customer.service'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(private customerService: CustomerService) { }\n}\n","<div class=\"container\">\n  <app-customer></app-customer>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule,ReactiveFormsModule} from '@angular/forms';\nimport {AngularFireModule} from '@angular/fire';\nimport {AngularFireDatabaseModule} from '@angular/fire/database';\nimport {environment} from '../environments/environment';\n\nimport { AppComponent } from './app.component';\nimport { CustomerComponent } from './customer/customer.component';\nimport { CustomerListComponent } from './customer-list/customer-list.component';\nimport { CustomerService } from './shared/customer.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CustomerComponent,\n    CustomerListComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFireDatabaseModule\n  ],\n  providers: [CustomerService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { CustomerService } from '../shared/customer.service';\n\n@Component({\n  selector: 'app-customer-list',\n  templateUrl: './customer-list.component.html',\n  styleUrls: ['./customer-list.component.css']\n})\nexport class CustomerListComponent implements OnInit {\n\n  constructor(private customerService: CustomerService) { }\n\n  get cs(){\n    return this.customerService;\n  }\n\n  customerArray = [];\n  showDeletedMessage: boolean;\n  searchText:string = \"\";\n\n  ngOnInit(): void {\n    this.customerService.getCustomers().subscribe(list=>{\n      this.customerArray = list.map(item =>{\n        return {\n          $key: item.key,\n          ...item.payload.val()\n        }\n      })\n    })\n  }\n\n  onDelete($key){\n    if(confirm('Tem Certeza que deseja deletar?')){\n      this.customerService.deleteCustomer($key);\n      this.showDeletedMessage = true;\n      setTimeout(()=> this.showDeletedMessage = false,3000);\n    }\n  }\n\n  filterCondition(customer){\n    return customer.fullName.toLowerCase().indexOf(this.searchText.toLowerCase()) != -1;\n  }\n\n}\n","<form class=\"form-inline\">\n    <input type=\"search\" class=\"form-control\" name=\"searchInput\" placeholder=\"Search\" #searchInput=\"ngModel\" [(ngModel)]=\"searchText\" style=\"width: 80%;\">\n    <button class=\"btn btn-outline-primary\" (click)=\"searchText=''\">X</button>\n</form>\n<hr>\n<table class=\"table table-sm table-hover\">\n    <thead class=\"thead-light\">\n        <tr>\n            <th>Nome Completo</th>\n            <th>Email</th>\n            <th>Celular</th>\n            <th>CPF</th>\n            <th>Nascimento</th>\n            <th>Editar</th>\n        </tr>\n    </thead>\n    <ng-container *ngFor=\"let customer of customerArray\">\n        <tr *ngIf=\"filterCondition(customer)\">\n            <td>{{customer.fullName}}</td>\n            <td>{{customer.email}}</td>\n            <td>{{customer.mobile}}</td>\n            <td>{{customer.cpf}}</td>\n            <td>{{customer.birthdate}}</td>\n            <td>\n                <button class=\"btn btn-success btn-sm\" (click)=\"cs.populateForm(customer)\">Editar</button>\n                &nbsp;\n                <button class=\"btn btn-danger btn-sm\" (click)=\"onDelete(customer.$key)\">Deletar</button>\n            </td>\n        </tr>\n    </ng-container>\n</table>\n<div class=\"alert alert-danger\" *ngIf=\"showDeletedMessage\">Deletado com Sucesso!</div>\n","import { Injectable } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AngularFireDatabase, AngularFireList} from '@angular/fire/database';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n\n  constructor(private firebase: AngularFireDatabase) { }\n\n  customerList: AngularFireList<any>;\n\n  form = new FormGroup({\n    $key: new FormControl(null),\n    fullName: new FormControl('', Validators.required),\n    email: new FormControl('', [Validators.required, Validators.email]),\n    mobile: new FormControl('', [Validators.required, Validators.minLength(8)]),\n    cpf: new FormControl(''),\n    birthdate: new FormControl('')\n  });\n\n  getCustomers(){\n    this.customerList = this.firebase.list('customers');\n    return this.customerList.snapshotChanges();\n  }\n\n  insertCustomer(customer){\n    this.customerList.push({\n      fullName: customer.fullName,\n      email: customer.email,\n      mobile: customer.mobile,\n      cpf: customer.cpf,\n      birthdate: customer.cpf,\n      \n    })\n  }\n\n  populateForm(customer){\n    this.form.setValue(customer);\n  }\n\n  updateCustomer(customer){\n    this.customerList.update(customer.$key,\n      {\n        fullName: customer.fullName,\n        email: customer.email,\n        mobile: customer.mobile,\n        cpf: customer.cpf,\n        birthdate: customer.cpf\n      });\n  }\n\n  deleteCustomer($key: string){\n    this.customerList.remove($key);\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}